import pandas as pd
from typing import List, Dict
import logging

class OzonAPI:
    def __init__(self, config):
        self.config = config
        self.logger = logging.getLogger(__name__)
    
    def get_available_products(self) -> List[Dict]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ Ozon (–∑–∞–≥–ª—É—à–∫–∞)"""
        self.logger.info("üì¶ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ Ozon (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç Ozon API
        mock_products = [
            {'offer_id': '12345', 'name': '–°–º–∞—Ä—Ç—Ñ–æ–Ω Xiaomi Redmi Note 12', 'price': 19999, 'stock': 15},
            {'offer_id': '67890', 'name': '–ù–∞—É—à–Ω–∏–∫–∏ Sony WH-1000XM4', 'price': 29999, 'stock': 8},
            {'offer_id': '11111', 'name': '–ß–µ—Ö–æ–ª –¥–ª—è iPhone 14 Pro', 'price': 2499, 'stock': 0},
            {'offer_id': '22222', 'name': 'Power Bank 20000 mAh', 'price': 4499, 'stock': 25},
            {'offer_id': '33333', 'name': '–£–º–Ω—ã–µ —á–∞—Å—ã Amazfit GTS 4', 'price': 12999, 'stock': 3}
        ]
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏
        available_products = [
            product for product in mock_products 
            if product['stock'] > 0
        ]
        
        self.logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(available_products)} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏")
        return available_products
    
    def load_recommended_prices(self) -> Dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö —Ü–µ–Ω –∏–∑ Excel"""
        try:
            excel_path = self.config.get('EXCEL_FILE_PATH')
            
            if not os.path.exists(excel_path):
                self.logger.warning("‚ö†Ô∏è Excel —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return {}
            
            df = pd.read_excel(excel_path)
            recommended_prices = {}
            
            for _, row in df.iterrows():
                offer_id = str(row.iloc[0]).strip()
                price = row.iloc[1]
                recommended_prices[offer_id] = price
            
            self.logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(recommended_prices)} —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö —Ü–µ–Ω")
            return recommended_prices
            
        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Excel: {e}")
            return {}